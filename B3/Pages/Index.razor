@page "/"
@inject GameService GameService
@inject NavigationManager NavigationManager

<h3>Lägg till Spelare</h3>
<form>
    <input type="text" @bind="NewPlayer" placeholder="Spelarens namn" />
    <button type="button" @onclick="AddPlayer">Lägg till</button>
</form>

<h3>Lägg till Gren</h3>
<form>
    <input type="text" @bind="NewEvent" placeholder="Gren" />
    <button type="button" @onclick="AddEvent">Lägg till</button>
</form>

<h3>Spelare</h3>
<ul>
    @foreach (var player in GameService.PlayerList)
    {
        <li>
            @player.Name
            <button type="button" @onclick="() => RemovePlayer(player)">Ta bort</button>
        </li>
    }
</ul>

<h3>Grenar</h3>
<ul>
    @foreach (var eventItem in GameService.EventList)
    {
        <li>
            @eventItem.Name
            <button type="button" @onclick="() => RemoveEvent(eventItem)">Ta bort</button>
        </li>
    }
</ul>


<h3>Anmälda spelare per gren</h3>
@foreach (var eventItem in GameService.EventList)
{
    <h4>@eventItem.Name</h4>
    <table>
        <thead>
            <tr>
                <th>Spelare</th>
                <th>Poäng</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var player in GameService.PlayerList)
            {
                <tr>
                    <td>@player.Name</td>
                    <td>@player.Scores.GetValueOrDefault(eventItem, 0)</td>
                    <td>
                        <button type="button" @onclick="() => IncreaseScore(player, eventItem)">Lägg till Poäng</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<button type="button" @onclick="ShowResults">Avsluta</button>


@code {
    private string NewPlayer;
    private string NewEvent;

    private void AddPlayer()
    {
        GameService.PlayerList.Add(new Player { Name = NewPlayer });
        NewPlayer = string.Empty;
    }

    private void AddEvent()
    {
        GameService.EventList.Add(new Event { Name = NewEvent });
        NewEvent = string.Empty;
    }

    private void RemovePlayer(Player player)
    {
        GameService.PlayerList.Remove(player);
    }

    private void RemoveEvent(Event eventItem)
    {
        GameService.EventList.Remove(eventItem);
    }

    private void IncreaseScore(Player player, Event eventItem)
    {
        if (player.Scores.ContainsKey(eventItem))
        {
            player.Scores[eventItem]++;
        }
        else
        {
            player.Scores[eventItem] = 1;
        }
    }

    private void ShowResults()
    {
        NavigationManager.NavigateTo("results");
    }
}
